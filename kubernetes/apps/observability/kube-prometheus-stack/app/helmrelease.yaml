---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 30m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 56.21.4
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  install:
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: thanos
      namespace: observability
  values:
    crds:
      enabled: true
    cleanPrometheusOperatorObjectNames: true
    defaultRules:
      rules:
        kubeControllerManager: false
        kubeSchedulerAlerting: false
    alertmanager:
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: kong
        hosts:
          - &hostAlertmanager alertmanager.janpuc.com
        tls:
          - hosts:
              - *hostAlertmanager
      alertmanagerSpec:
        useExistingSecret: true
        configSecret: alertmanager-secret
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: local-hostpath
              resources:
                requests:
                  storage: 1Gi
        resources:
          requests:
            cpu: 10m
            memory: 64Mi
          limits:
            memory: 256Mi
    prometheusOperator:
      resources:
        requests:
          cpu: 20m
        limits:
          memory: 64Mi
      prometheusConfigReloader:
        resources:
          requests:
            cpu: 5m
          limits:
            memory: 32Mi
    kubelet:
      enabled: true
    kubeApiServer:
      enabled: true
    prometheus:
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: kong
        hosts:
          - &hostPrometheus prometheus.janpuc.com
        tls:
          - hosts:
              - *hostPrometheus
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
      prometheusSpec:
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        enableAdminAPI: true
        walCompression: true
        enableFeatures:
          - auto-gomaxprocs
          - memory-snapshot-on-shutdown
          - new-service-discovery-manager
        thanos:
          image: quay.io/thanos/thanos:${THANOS_VERSION}
          version: "${THANOS_VERSION#v}"
          objectStorageConfig:
            existingSecret:
              name: thanos-objstore-secret
              key: objstore.yml
        retention: 2d
        retentionSize: 10GB
        externalLabels:
          cluster: main
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: local-hostpath
              resources:
                requests:
                  storage: 5Gi
        resources:
          requests:
            cpu: 10m
          limits:
            memory: 1Gi
    nodeExporter:
      enabled: true
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
      resources:
        requests:
          cpu: 5m
        limits:
          memory: 32Mi
    kubeStateMetrics:
      enabled: true
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      metricLabelsAllowlist:
        - pods=[*]
        - deployments=[*]
        - persistentvolumeclaims=[*]
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
      resources:
        requests:
          cpu: 5m
        limits:
          memory: 64Mi
    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          multicluster:
            etcd:
              enabled: true
  postRenderers:
    - kustomize:
        patches:
          - target:
              version: v1
              kind: ConfigMap
              labelSelector: grafana_dashboard in (1)
            patch: |-
              apiVersion: v1
              kind: ConfigMap
              metadata:
                name: not-used
                namespace: not-used
                annotations:
                  grafana_folder: Kubernetes
